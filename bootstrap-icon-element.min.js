function handleNameChange(t,n,e){t.name=e,t.innerHTML="",e&&t.constructor.getIconSvg(e).then(n=>{t.name===e&&(t.innerHTML=n)}).catch(t=>{console.error(`Failed to load icon: ${e+"\n"}${t}`)})}const CACHE={},CDN="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/icons",BASE=window.BootstrapIcon&&window.BootstrapIcon.path||CDN;class BootstrapIcon extends HTMLElement{constructor(){super()}static getIconSvg(t){var n=`${BASE}/${t}.svg`;return n&&CACHE[n]?CACHE[n]:(CACHE[n]=fetch(n).then(function(t){return t.ok?t.text():""}),CACHE[n])}static get observedAttributes(){return["name"]}attributeChangedCallback(t,n,e){switch(t){case"name":handleNameChange(this,n,e)}}connectedCallback(){}}customElements.define("bs-i",BootstrapIcon);export default BootstrapIcon;